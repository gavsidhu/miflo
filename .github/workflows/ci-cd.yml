name: CI/CD

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    environment: production
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb 
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

      - uses: actions/checkout@v4

      - name: Set up Go 1.20
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Set up SQLite database
        run: |
          mkdir -p tmp
          touch tmp/test.db

      - name: Wait for PostgreSQL to be ready
        run: until pg_isready -h localhost -p 5432; do sleep 2; done

      - name: Run libsql/sqld container
        run: docker run -p 8080:8080 -d ghcr.io/libsql/sqld:latest

      - name: Run Tests
        run: go test ./...
        env:
          DATABASE_URL: ${{ vars.DATABASE_URL }}
          POSTGRES_TEST_DATABASE_URL: ${{ vars.POSTGRES_TEST_DATABASE_URL }}
          SQLITE_TEST_DATABASE_URL: ${{ vars.SQLITE_TEST_DATABASE_URL }}
          LIBSQL_TEST_DATABASE_URL: ${{ vars.LIBSQL_TEST_DATABASE_URL }}

      - name: Clean up SQLite database
        run: rm -rf tmp

  goreleaser:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: actions/setup-go@v4
        with:
          go-version: stable

      - uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: ${{ env.GITHUB_REF_NAME}}
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISHER_TOKEN }}

